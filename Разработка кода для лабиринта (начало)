# Размеры лабиринта

rows, cols = width // cell_size, height // cell_size

# Генерация лабиринта (простой алгоритм)

grid = [[1] * cols for _ in range(rows)]  # 1 - стена, 0 - путь

grid[0][0] = 0  # Начало

grid[rows - 1][cols - 1] = 0  # Конец

# Простой алгоритм создания случайного лабиринта (требует улучшения и изменения по уровням)

stack = [(0, 0)]

while stack:

    x, y = stack[-1]

    neighbors = []

    if x > 0 and grid[x - 1][y] == 1:

        neighbors.append((x - 1, y))

    if x < rows - 1 and grid[x + 1][y] == 1:

        neighbors.append((x + 1, y))

    if y > 0 and grid[x][y - 1] == 1:

        neighbors.append((x, y - 1))

    if y < cols - 1 and grid[x][y + 1] == 1:

        neighbors.append((x, y + 1))



    if neighbors:

        nx, ny = random.choice(neighbors)

        grid[nx][ny] = 0

        if (x - nx) == 0:

            grid[x][min(y,ny)+1] = 0

        else:

            grid[min(x,nx)+1][y] = 0

        stack.append((nx, ny))

    else:

        stack.pop()
